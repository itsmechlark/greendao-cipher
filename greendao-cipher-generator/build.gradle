apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.itsmechlark'
version = '1.0.0'
sourceCompatibility = 1.6

def isSnapshot = version.endsWith('-SNAPSHOT')
def sonatypeRepositoryUrl
if(isSnapshot) {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
} else {
    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

repositories {
    mavenCentral()
}

// provided is not supported in Gradle 1.4, see http://issues.gradle.org/browse/GRADLE-784
// Like this, it won't appear at all in the POM
configurations {
    provided
    deployerJars
}

dependencies {
    compile ('org.freemarker:freemarker:2.3.20')
    testCompile 'junit:junit:4.11'
    // deployerJars 'org.apache.maven.wagon:wagon-webdav-jackrabbit:2.4'
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src-template'
        }
    }
    test {
        java {
            srcDir 'src-test'
        }
    }
}

test {
    doFirst {
        mkdir 'test-out'
    }
    doLast{
        delete 'test-out'
    }
}

javadoc {
    title = "greendao-cipher-core ${version} API"
    // Unfinished APIs:
    excludes = ['de/greenrobot/daogenerator/Query*']
    options.bottom = 'Available under the Apache License, Version 2.0 - <i>Copyright 2013, <a href="https://github.com/itsmechlark">itsmechlark</a>. All Rights Reserved.</i>'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
    project.hasProperty('signing.secretKeyRingFile')) {
        sign configurations.archives
    } else {
        println "Signing information missing/incomplete for ${project.name}"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername') 
                && project.hasProperty('preferedPassword')) {
                configuration = configurations.deployerJars
                repository(url: preferedRepo) {
                    authentication(userName: preferedUsername, password: preferedPassword)
                }
            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                repository(url: sonatypeRepositoryUrl) {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
            } else {
                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
            }

            pom.project {
               name 'greendao-cipher-core'
               packaging 'jar'
               description 'Code generator for greendao-cipher, light and fast ORM for Android based on greenDAO(https://github.com/greenrobot/greenDAO) with Cipher features from android-database-sqlcipher(https://github.com/sqlcipher/android-database-sqlcipher)'


               scm {
                   url 'https://github.com/itsmechlark/greendao-cipher'
                   connection 'scm:git@github.com:itsmechlark/greendao-cipher.git'
                   developerConnection 'scm:git@github.com:itsmechlark/greendao-cipher.git'
               }

               licenses {
                   license {
                       name 'The Apache Software License, Version 2.0'
                       url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                       distribution 'repo'
                   }
               }

               developers {
                   developer {
                       id 'itsmechlark'
                       name 'greenrobot'
                   }
               }
               
               issueManagement {
                   system 'GitHub Issues'
                   url 'https://github.com/itsmechlark/greendao-cipher/issues'
               }
           }
        }
    }
}